{"name":"Dynamodb.sql","tagline":"SQL-like external DSL for querying and scanning Amazon DynamoDB","body":"This library gives you the ability to execute [**query**](http://docs.amazonwebservices.com/amazondynamodb/latest/developerguide/API_Query.html) and [**scan**](http://docs.amazonwebservices.com/amazondynamodb/latest/developerguide/API_Scan.html) operations against [**Amazon DynamoDB**](http://aws.amazon.com/dynamodb/) using a **SQL**-like syntax by extending the existing functionalities of `AmazonDynamoDBClient` and `DynamoDBContext` classes found in the standard .Net AWS SDK.\r\n\r\n### Syntax\r\n\r\nA **Query** request is *only permitted* if your table defines both a hash and a range key. A `Query` allows you to specify the hash key value and optionally specify at most one comparison against the range key value, if no range key comparison is specified then all available range keys will be returned.\r\n\r\nThe basic format of a `Query` can be expressed as:\r\n\r\n    SELECT AttributeName1, AttributeName2, ..., AttributeNameN\r\n    FROM   TableName\r\n    WHERE  HashKeyAttributeName = HashKeyValue\r\n    AND    RangeKeyAttributeName operator RangeKeyValue(s)\r\n    ORDER DESC\r\n    LIMIT  N\r\n    WITH   (NoConsistentRead, PageSize(n), NoReturnedCapacity, \r\n            Index(IndexName, AllAttributesFlag))\r\n\r\nA **Scan** request on the other hand is more permissive but also more expensive to run (both in terms of latency and read units consumed which translates directly to running cost). A 'Scan' allows you to filter on arbitrary fields in your data using a wide range of comparison operators.\r\n\r\nThe basic format of a `Scan` can be expressed as:\r\n\r\n    SELECT AttributeName1, AttributeName2, ..., AttributeNameN\r\n    FROM   TableName\r\n    WHERE  AttributeName1 operator1 AttributeValue1\r\n    AND    AttributeName2 operator2 AttributeValue2\r\n    AND    ...\r\n    AND    AttributeNameN operatorN AttributeValueN\r\n    LIMIT  N\r\n    WITH   (PageSize(n), NoReturnedCapacity, Segments(m))\r\n\r\nFor more details on the valid operators and explanation of the various `with` options for each type of request, please refer to the [**Getting Started**](https://github.com/theburningmonk/DynamoDb.SQL/wiki/Getting-Started-V2) guide.\r\n\r\nIf all you want to find out is the number of matching items rather than the actual items themselves, then you can also use the `COUNT` keyword in place of `SELECT`.\r\n\r\nFor instance, for a [query count](http://docs.amazonwebservices.com/amazondynamodb/latest/developerguide/QueryAndScan.html#Count):\r\n\r\n    COUNT  * \r\n    FROM   TableName\r\n    WHERE  HashKeyAttributeName = HashKeyValue\r\n    AND    RangeKeyAttributeName operator RangeKeyValue(s)\r\n    LIMIT  N\r\n\r\nor a [scan count](http://docs.amazonwebservices.com/amazondynamodb/latest/developerguide/QueryAndScan.html#Count):\r\n\r\n    COUNT  * \r\n    FROM   TableName\r\n    WHERE  AttributeName1 operator1 AttributeValue1\r\n    AND    AttributeName2 operator2 AttributeValue2\r\n    AND    ...\r\n    AND    AttributeNameN operatorN AttributeValueN\r\n    LIMIT  N\r\n\r\nPlease note that `DynamoDB` **does not** allow attribute names to be specified when performing a count operation, so a valid count query will **always** start with `COUNT * FROM ...`.\r\n\r\n### Local Secondary Index (LSI)\r\n\r\nQuerying using LSI is supported using the **Index** query option, more details [here](http://theburningmonk.com/2013/05/dynamodb-sql-1-2-1-now-supports-local-secondary-index/).\r\n\r\n### Parallel Scans\r\n\r\nScanning using parallel scans is supported using the **Segments** scan option, example [here](https://github.com/theburningmonk/DynamoDb.SQL/blob/master/ExampleFs/V2Examples.fsx#L466-L497).\r\n\r\n### Nuget\r\n\r\nDownload and install **DynamoDb.SQL** using [NuGet](https://nuget.org/packages/DynamoDb.SQL).\r\n\r\n<a href=\"https://nuget.org/packages/DynamoDb.SQL\"><img src=\"http://theburningmonk.com/images/dynamodb.sql-nuget-install.png\" alt=\"NuGet package\"/></a>\r\n\r\nYou can view the release notes [here](https://github.com/theburningmonk/DynamoDb.SQL/wiki/Release-Notes).\r\n\r\n### Keep in touch\r\n\r\nPlease follow the official twitter account [@DynamoDbSQL](https://twitter.com/DynamoDbSQL) for updates, and feel free to send me any feedbacks or questions you have about the project :-)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}